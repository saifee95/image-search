{
  "name": "bing.search",
  "version": "1.0.1",
  "description": "NodeJS Bing Search client",
  "main": "lib/search.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/dudleycarr/bing-search.git"
  },
  "keywords": [
    "Bing",
    "Bing Search",
    "Bing Search API",
    "Azure Bing Search API",
    "Search",
    "Web Search",
    "Image Search",
    "Video Search",
    "News Search"
  ],
  "author": {
    "name": "Dudley Carr",
    "email": "dudley.carr@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/dudleycarr/bing-search/issues"
  },
  "homepage": "https://github.com/dudleycarr/bing-search",
  "dependencies": {
    "async": "^0.9.0",
    "debug": "^2.1.0",
    "request": "^2.51.0",
    "underscore": "^1.7.0"
  },
  "devDependencies": {
    "coffee-errors": "^0.8.6",
    "coffee-script": "^1.8.0",
    "coffeelint": "^1.7.1",
    "grunt": "^0.4.5",
    "grunt-cli": "^0.1.13",
    "grunt-coffeelint": "0.0.13",
    "grunt-contrib-coffee": "^0.12.0",
    "grunt-mocha-cli": "^1.11.0",
    "mocha": "^2.0.1",
    "nock": "^0.52.0",
    "should": "^4.4.1"
  },
  "scripts": {
    "build": "coffee --bare --compile --output lib src/*.coffee",
    "prepublish": "coffee --bare --compile --output lib src/*.coffee",
    "postpublish": "rm -rf lib",
    "test": "node_modules/.bin/grunt test"
  },
  "readme": "Bing Search API for NodeJS\n==========================\n[![Build Status](https://travis-ci.org/dudleycarr/bing-search.svg)](https://travis-ci.org/dudleycarr/bing-search)\n\nFeatures\n--------\n\n* Support **all** [Bing Search API](https://datamarket.azure.com/dataset/bing/search) verticals\n    * Web\n    * Image\n    * Video\n    * News\n    * Related search\n    * Spelling suggestions\n    * Composite\n* **Accurate counts** for each vertical. Web being the most problematic.\n* Abstracted pagination for **large results.**\n* **Concurrent** requests for results sets larger than 50 results.\n* **Normalized** JSON results.\n* Automatically uses `gzip`\n\nGetting Started\n---------------\n\n1. Sign-up for an account the [Bing Search API](https://datamarket.azure.com/dataset/bing/search) via the Azure Market Place.\n2. Use the [Azure Data Explorer for the Bing Search API](https://datamarket.azure.com/dataset/explore/bing/search) to see the results you can expect returned via the API.\n3. Grab the account key from the Data Explorer.\n\nInstall\n-------\n\n```bash\n$ npm install bing.search --save\n```\n\nUsage\n-----\n\nBasic example:\n```javascript\nvar Search = require('bing.search');\nvar util = require('util');\n\nsearch = new Search('account_key_123');\n\nsearch.web('Tutta Bella Neapolitan Pizzeria',\n  {top: 5},\n  function(err, results) {\n    console.log(util.inspect(results, \n      {colors: true, depth: null}));\n  }\n);\n```\n\nOutput:\n```javascript\n[ { id: 'e66c09f5-3317-4227-aee7-bc5dec3aec43',\n    title: 'Tutta Bella Neapolitan Pizzeria',\n    description: 'Neapolitan pizzeria located...',\n    displayUrl: 'tuttabellapizza.com',\n    url: 'http://tuttabellapizza.com/' },\n  { id: '94b5a08a-6148-4832-9077-98245f3e1b42',\n    title: 'Tutta Bella Neapolitan Pizzeria - Columbia City',\n    description: 'Tutta Bella Columbia City...',\n    displayUrl: 'www.tuttabella.com/tuttabellacc/index.php',\n    url: 'http://www.tuttabella.com/tuttabellacc/index.php' },\n  { id: '11bf839d-ce9e-4215-9b55-d663bdd17b98',\n    title: 'Tutta Bella Menu - Tutta Bella Neapolitan Pizzeria',\n    description: 'Tutta Bella Neapolitan Pizzeria - Columbia City...',\n    displayUrl: 'www.tuttabella.com/menu',\n    url: 'http://www.tuttabella.com/menu/' },\n  { id: 'da706086-5566-414b-b70f-2648e762cdf6',\n    title: 'Tutta Bella Neapolitan Pizzeria - Crossroads',\n    description: 'Ciao! Come visit us in our newest Tutta Bella location...',\n    displayUrl: 'tuttabella.com/tuttabellacr/index.php',\n    url: 'http://tuttabella.com/tuttabellacr/index.php' },\n  { id: '4d4d0961-bdd1-406f-aa80-39d067318c49',\n    title: 'Tutta Bella Neapolitan Pizzeria - Westlake',\n    description: 'Parking. Tutta Bella validates guest parking...',\n    displayUrl: 'www.tuttabella.com/TuttaBellaWL',\n    url: 'http://www.tuttabella.com/TuttaBellaWL/' } ]\n```\n\n### new Search(accountKey, [parallelLimit], [useGzip])\n\nThe `accountKey` is Bing Search API account key provided by the Azure market\nplace. `parallelLimit` is the number of search results pages fetched in\nparallel for a given query. The default is `10`. `useGzip` defaults to true.\n\nAvailable methods:\n\n* `counts(query, [options], callback)` . `query` is the search query. `options` is a dictionary with permissible values below -- it can be ommitted. `callback` takes an error and a results object.  \n\n  The following options can be provided:\n  * `market`\n  * `sources` defaults to all sources.\n\n  Format of results to callback:\n  ```javascript\n  { web: 334,\n    image: 20400,\n    video: 33400,\n    news: 1460 }\n  ```\n\n* `web(query, [options], callback)` \"Web\" only search. `query` is the search query. `options` is a dictionary with permissible values below -- it can be ommitted. `callback` takes an error and a results object.  \n\n  The following options can be provided:\n  * `top` default is 50\n  * `skip` default is 0\n  * `market`\n\n  Format of results to callback:\n  ```javascript\n  [ { id: '...',\n      title: '...',\n      description: '...',\n      url: '...' },\n     ...\n  ]\n\n  ```\n* `images(query, [options], callback)` \"Image\" only search. `query` is the search query. `options` is a dictionary with permissible values below -- it can be ommitted. `callback` takes an error and a results object.\n\n  The following options can be provided:\n  * `top` default is 50\n  * `skip` default is 0\n  * `market`\n\n  Format of results to callback:\n  ```javascript\n  [ { id: '...',\n      title: '...',\n      url: 'http://...',\n      sourceUrl: 'http://...',\n      displayUrl: '...',\n      width: 1025,\n      height: 1600,\n      size: 136701,\n      type: 'image/jpeg',\n      thumbnail:\n      { url: 'http://...',\n        type: 'image/jpg',\n        width: 192,\n        height: 300,\n        size: 6946 }\n    },\n     ...\n  ]\n  ```\n* `videos(query, [options], callback)` \"Video\" only search. `query` is the search query. `options` is a dictionary with permissible values below -- it can be ommitted. `callback` takes an error and a results object.\n\n  The following options can be provided:\n  * `top` default is 50\n  * `skip` default is 0\n  * `market`\n\n  Format of results to callback:\n  ```javascript\n  [ { id: '...',\n      title: '...',\n      url: 'https://...',\n      displayUrl: 'http://...',\n      runtime: 62000,\n      thumbnail:\n      { url: 'http://...',\n        type: 'image/jpg',\n        width: 160,\n        height: 120,\n        size: 18423 } },\n     ...\n  ]\n  ```\n* `news(query, [options], callback)` \"News\" only search. `query` is the search query. `options` is a dictionary with permissible values below -- it can be ommitted. `callback` takes an error and a results object.\n\n  The following options can be provided:\n  * `top` default is 15\n  * `skip` default is 0\n  * `market`\n\n  Format of results to callback:\n  ```javascript\n  [ { id: '...',\n      title: '...',\n      source: '...',\n      url: 'http://...',\n      description: '...',\n      date: [Date Object] },\n     ...\n  ]\n  ```\n* `related(query, [options], callback)` \"RelatedSearch\" only search. `query` is the search query. `options` is a dictionary with permissible values below -- it can be ommitted. `callback` takes an error and a results object.\n\n  The following options can be provided:\n  * `top` default is 50\n  * `skip` default is 0\n  * `market`\n\n  Format of results to callback:\n  ```javascript\n  [ { query: '...',\n      url: 'http://...' },\n     ...\n  ]\n  ```\n\n* `spelling(query, [options], callback)` \"SpellingSuggestions\" only search. `query` is the search query. `options` is a dictionary with permissible values below -- it can be ommitted. `callback` takes an error and a results object.\n\n  The following options can be provided:\n  * `top` default is 50\n  * `skip` default is 0\n  * `market`\n\n  `callback`'s result is a list of alternate query spellings as strings.\n\n* `composite(query, [options], callback)` \"Composite\" searches all of the provided sources. `query` is the search query. `options` is a dictionary with permissible values below -- it can be ommitted. `callback` takes an error and a results object.\n\n  The following options can be provided:\n  * `top` default is 50\n  * `skip` default is 0\n  * `sources` defaults to all sources\n  * `market`\n\n  Format of results to callback:\n  ```javascript\n  { web: [ ... ],\n    images: [ ... ],\n    videos: [ ... ],\n    news: [ ... ],\n    spelling: [ ... ],\n    related: [ ... ]\n  }\n  ```\n\n  Each of the sources with in the composite result follows is the same format\n  returned by each of the individual source searches.\n\n### \n\nDebugging\n---------\n\n\nTODOs\n-----\n\n* Better API error messages\n* Support WebSearchOptions\n* Support Adult params\n* Support Latitude and Longitude\n* Support WebFileType\n* Support ImageFilters\n* Support VideoFilters and VideoSortBy\n* Support NewsCategory, NewsLocation, NewsSortBy\n* Adjust https max sockets based on concurrent level\n* Support smaller pagination for news\n\nChanges\n-------\n\n* 1.0\n  * Initial support for all Bing Search API sources\n",
  "readmeFilename": "README.md",
  "_id": "bing.search@1.0.1",
  "dist": {
    "shasum": "d93ab135804041f45f041532e2e1bc626489e5cb"
  },
  "_from": "bing.search@",
  "_resolved": "https://registry.npmjs.org/bing.search/-/bing.search-1.0.1.tgz"
}
